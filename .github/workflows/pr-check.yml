name: PR Check
on:
  workflow_dispatch:
  pull_request:
    types: [ opened, synchronize, reopened ]
  merge_group:
    types: [ checks_requested ]
permissions:
  id-token: write # configure-aws-credentials
  pull-requests: write # pr comment
jobs:
  pr-checks:
    name: PR checks
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
    - name: Always succeed ðŸŸ¢
      run: exit 0

  build:
    uses: ./.github/workflows/build.yml

  terraform-checks:
    name: Terraform checks
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    steps:
    - uses: actions/checkout@v4
    - uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.10.2
    - uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::097614841487:role/GithubActionsRole
        aws-region: us-east-1
    - name: Terraform validations and plan
      run: |
        terraform init -input=false
        terraform validate
        terraform fmt -check
        terraform plan -input=false -out=tfplan -var 'hash=${{ needs.build.outputs.hash }}'
    - name: Post terraform plan to PR
      uses: borchero/terraform-plan-comment@v2
      with:
        token: ${{ github.token }}
        planfile: tfplan

  deploy-terraform:
    name: Deploy terraform
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'merge_group'
    environment: dev
    concurrency: deploy-main
    steps:
    - uses: actions/checkout@v4
    - uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.10.2
    - uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::097614841487:role/GithubActionsRole
        aws-region: us-east-1
    - name: Terraform apply
      run: |
        terraform init -input=false
        terraform apply -auto-approve -input=false -var 'hash=${{ needs.build.outputs.hash }}'
    - name: Fail workflow on deploy error
      if: failure()
      run: echo "Deployment failed, have to rollback ðŸ”´" && exit 1

  sanity-test:
    name: Deployed sanity test
    runs-on: ubuntu-latest
    needs: deploy-terraform
    if: github.event_name == 'merge_group'
    steps:
    - name: Simulate sanity check
      id: sanity
      run: exit 0

  rollback-if-failed:
    name: Rollback & re-apply main
    runs-on: ubuntu-latest
    needs: [ deploy-terraform, sanity-test ]
    if:  needs.deploy-terraform.result == 'failure' || needs.sanity-test.result == 'failure'
    environment: dev
    concurrency: deploy-main
    steps:
    - uses: actions/checkout@v4
      with:
        ref: main
    - uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.10.2
    - uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::097614841487:role/GithubActionsRole
        aws-region: us-east-1
    - name: Terraform apply
      run: |
        terraform init -input=false
        terraform apply -input=false -auto-approve -var 'hash=main'
