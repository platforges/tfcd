name: PR
on:
  workflow_dispatch:
  pull_request:
    types: [ opened, synchronize, reopened ]
  merge_group:
    types: [ checks_requested ]
permissions:
  id-token: write # configure-aws-credentials
  pull-requests: write # pr comment
jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      dev: ${{ steps.filter.outputs.dev }}
      stg: ${{ steps.filter.outputs.stg }}
      prd: ${{ steps.filter.outputs.prd }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          tf:  [ '*.(tf|tfvars)', '.terraform.locl.hcl', version ]
          dev: [ 'environments/dev/**' ]
          stg: [ 'environments/stg/**' ]
          prd: [ 'environments/prd/**' ]

  pr-checks:
    uses: ./.github/workflows/pass.yml
    with:
      skip: ${{ github.event_name != 'pull_request' }}

  build:
    uses: ./.github/workflows/build.yml

  terraform-dev:
    uses: ./.github/workflows/deploy.yml
    needs: [ changes, build ]
    if: github.event_name == 'merge_group' && needs.build.result == 'success' && needs.changes.outputs.dev == 'true'
    with:
      environment: dev
      hash: ${{ needs.build.outputs.hash }}

  terraform-stg:
    uses: ./.github/workflows/deploy.yml
    needs: [ changes, build ]
    if: github.event_name == 'merge_group' && needs.build.result == 'success' && needs.changes.outputs.stg == 'true'
    with:
      environment: staging
      hash: ${{ needs.build.outputs.hash }}

  terraform-prd:
    uses: ./.github/workflows/deploy.yml
    needs: [ changes, build ]
    if: github.event_name == 'merge_group' && needs.build.result == 'success' && needs.changes.outputs.prd == 'true'
    with:
      environment: production
      hash: ${{ needs.build.outputs.hash }}
